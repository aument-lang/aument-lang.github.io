const codes={"brainfuck.au":"// The simplest Turing-complete language written in Aument\r\n// https://en.wikipedia.org/wiki/Brainfuck\r\n\r\ninstructions = str::chars(input());\r\nilen = instructions.len();\r\ntape = array::repeat(0, 8192);\r\nip = 0;\r\ndp = 0;\r\nwhile ip < ilen {\r\n    current_insn = instructions[ip];\r\n    if current_insn == '>' {\r\n        dp += 1;\r\n    } else if current_insn == '<' {\r\n        dp -= 1;\r\n    } else if current_insn == '+' {\r\n        tape[dp] = tape[dp] + 1;\r\n    } else if current_insn == '-' {\r\n        tape[dp] = tape[dp] - 1;\r\n    } else if current_insn == '.' {\r\n        print str::char(tape[dp]);\r\n    } else if current_insn == ',' {\r\n        tape[dp] = int(input());\r\n    } else if current_insn == '[' {\r\n        if tape[dp] == 0 {\r\n            loop = 1;\r\n            while loop > 0 {\r\n                ip += 1;\r\n                current_insn = instructions[ip];\r\n                if current_insn == '[' {\r\n                    loop += 1;\r\n                } else if current_insn == ']' {\r\n                    loop -= 1;\r\n                }\r\n            }\r\n        }\r\n    } else if current_insn == ']' {\r\n        loop = 1;\r\n        while loop > 0 {\r\n            ip -= 1;\r\n            current_insn = instructions[ip];\r\n            if current_insn == '[' {\r\n                loop -= 1;\r\n            } else if current_insn == ']' {\r\n                loop += 1;\r\n            }\r\n        }\r\n        ip -= 1;\r\n    }\r\n    ip += 1;\r\n}","class.au":"class Human {\r\n\tvar name;\r\n}\r\n\r\ndef (self: Human) init(name) {\r\n\t@name = name;\r\n}\r\n\r\nclass Cat {}\r\n\r\ndef (self: Human) say() {\r\n\tprint \"I'm \", @name, \"\\n\";\r\n}\r\n\r\ndef (self: Cat) say() {\r\n\tprint \"meow!\";\r\n}\r\n\r\nalice = new Human;\r\ninit(alice, \"Alice\");\r\nbob = new Human;\r\ninit(bob, \"Bob\");\r\ncat = new Cat;\r\n\r\nsay(alice);\r\nsay(bob);\r\nsay(cat);\r\n","fib-iter.au":"n = 42;\r\ni=1;\r\na=0;\r\nb=1;\r\nwhile i<=n {\r\n    print a, \"\\n\";\r\n    c = a + b;\r\n    a = b;\r\n    b = c;\r\n    i = i + 1;\r\n}","fib-rec.au":"def fib(n) {\r\n    if n <= 1 {\r\n        return n;\r\n    }\r\n    return fib(n - 1) + fib(n - 2);\r\n}\r\n\r\nprint fib(28);\r\n","fizzbuzz.au":"i = 0;\r\nwhile i < 100 {\r\n    if i % 3 == 0 && i % 5 == 0 {\r\n        print \"Fizzbuzz\\n\";\r\n    } else if i % 3 == 0 {\r\n        print \"Fizz\\n\";\r\n    } else if i % 5 == 0 {\r\n        print \"Buzz\\n\";\r\n    } else {\r\n        print i, \"\\n\";\r\n    }\r\n    i = i + 1;\r\n}\r\n"};